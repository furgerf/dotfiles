# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

# general convenience
snippet . "expand '.' at any word boundary" w
self.
endsnippet
snippet sa "assign own attribute"
self.${1:attribute} = $1
endsnippet
snippet a "args" w
*args
endsnippet
snippet kw "kwargs" w
**kwargs
endsnippet
snippet akw "args and kwargs" w
*args, **kwargs
endsnippet
snippet sp "assign own protected attribute"
self._${1:attribute} = $1
endsnippet
snippet kwa "assign kwarg to kwarg"
${1:foo}=$1,
endsnippet
snippet loge "log exception" w
type(ex).__name__, ex
endsnippet

snippet defi "initializer" b
def __init__(self, ${1:arg1}) -> None:
	${2:${VISUAL:pass}}
endsnippet

snippet roprop "Read Only Property" b
@property
def ${1:name}(self) -> $0:
	${2:return self._$2}$1
endsnippet

# writing tests
snippet sk "skip unittests" b
@pytest.mark.skip(${1:skip_reason})
endsnippet
snippet test "add test method"
def test_${1:description}(${2:`!v indent('.') ? 'self' : ''`}):
	${0}
endsnippet

# logging
snippet glog "import and createlogger"
from sedimentum_utils.logging.logging import get_logger
logger = get_logger(__name__)

endsnippet
snippet ld "log debug"
logger.debug("${0:msg}")
endsnippet
snippet li "log info"
logger.info("${0:msg}")
endsnippet
snippet lw "log warning"
logger.warning("${0:msg}")
endsnippet
snippet le "log error"
logger.error("${0:msg}")
endsnippet
snippet lx "log exception"
logger.exception("${0:msg}")
endsnippet

# special imports
snippet np "numpy"
import numpy as np
endsnippet
snippet plt "matplotlib"
import matplotlib.pyplot as plt
endsnippet

# comprehensions
snippet lcp "list comprehension"
[${1:item} for ${2:element} in ${3:collection}]${0}
endsnippet
snippet dcp "dict comprehension"
{${1:key}: ${2:value} for ${3:element} in ${4:collection}}${0}
endsnippet
snippet scp "set comprehension"
{${1:item} for ${2:element} in ${3:collection}${0}
endsnippet
