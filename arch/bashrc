#
# ~/.bashrc
#

# if not running interactively, don't do anything
[[ $- != *i* ]] && return

# auto-start each session in tmux
#[[ -z "$TMUX" ]] && exec tmux

# prompt
echo -e '\e[0;37mWelcome to the \e[1;34mother side\e[0;37m...\n'
PS1="\[\033[1;30m\][\[\033[01;37m\]\$?\$(if [[ \$? == 0 ]]; then echo \"  \[\033[01;32m\]\342\234\223\"; else echo \"\[\033[01;31m\]\342\234\227\"; fi)\[\033[1;30m\]][\[\033[1;37m\]\A\[\033[1;30m\]][\[\033[1;37m\]\u\[\033[1;30m\]@\[\033[1;37m\]\h\[\033[1;30m\]][\[\033[1;37m\]\w\[\033[1;30m\]]\[\033[1;34m\]\$\[\033[0;37m\] "

# exports
export EDITOR="vim"
export VISUAL="vim"
export PATH=$PATH:~/git/linux-scripts:~/git/linux-scripts/conky
#export TERM="xfce4-terminal"
#export TERM="xterm"

# history configuration
# append to the history file, don't overwrite it
shopt -s histappend
# save multi-line commands as one command
shopt -s cmdhist
# record each line as it gets issued
PROMPT_COMMAND='history -a'
# history size
export HISTSIZE=5000000
export HISTFILESIZE=10000000
# ignore duplicates and some commands
export HISTCONTROL=ignoreboth:erasedups
export HISTIGNORE="history;ls;date;man *;exit;:q;bg;fg"
# Useful timestamp format
HISTTIMEFORMAT='%F %T '

# easier navigation
# auto-cd when entering path
shopt -s autocd
# do some name autocorrecting
shopt -s dirspell
shopt -s cdspell
# fixes line shenanigans(?)
shopt -s checkwinsize
# add some paths for easier navigation
CDPATH=".:~/git:/data"
cl() {
  if [[ -d "$1" ]]; then
    cd "$1"
    ls -Alh
  else
    echo "bash: cl: '$1': Directory not found"
  fi
}

# privileged access
if [ $UID -ne 0 ]; then
  alias scat='sudo cat'
  alias svim='sudo vim'
  alias smount='sudo mount'
  alias sumount='sudo umount'
  alias ssystemctl='sudo systemctl'
fi

# modified commands
alias diff='colordiff -s'              # requires colordiff package
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias df='df -h'
alias du='du -c -h'
alias mkdir='mkdir -p -v'
alias cd='cd -P'
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias .......='cd ../../../../../..'
# ls
alias ls='ls -lhF --color=auto'
alias lr='ls -R'                    # recursive ls
alias la='ls -a'
alias lx='la -BX'                   # sort by extension
alias lz='la -rS'                   # sort by size
alias lt='la -rt'                   # sort by date
alias ll='la'
# safety features
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -I'                    # 'rm -i' prompts for every file
alias ln='ln -i'
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

# new basic commands
alias rmr='rm -r'
alias fucking='sudo'
alias xclip='xclip -selection c'
alias xpaste='xclip -o'
alias da='date "+%A, %B %d, %Y [%T]"'
alias du1='du --max-depth=1'
alias hist='history | grep'      # requires an argument
alias :q='exit'
alias :Q='exit'

# new diagnostic commands
alias openports='ss --all --numeric --processes --ipv4 --ipv6'
recent() {
  #if [[ "$1" =~ '^[0-9]+$' ]]; then
  if [ "$1" -eq "$1" ] 2>/dev/null; then
    find -maxdepth "$1" -type f -mtime -1 -printf "%T@ - %Tk:%TM - %f\n" | sort -rn | cut -d- -f2-
  else
    find -maxdepth 1 -type f -mtime -1 -printf "%T@ - %Tk:%TM - %f\n" | sort -rn | cut -d- -f2-
  fi
}
p8 () {
  STATUS=0
  LOOP=1
  while [ "$LOOP" -eq 1 ]; do
    ping 8.8.8.8
    STATUS=$?
    if [ $STATUS -eq 0 ]; then
      LOOP=0
    else
      sleep 1
    fi
  done
}
alias files='file $(/usr/bin/ls -aH)'
alias find-broken-symlinks='find . -type l | (while read FN ; do test -e "$FN" || ls -ld "$FN"; done)'
alias pg='ps -Af | grep $1'         # requires an argument (note: /usr/bin/pg is installed by the util-linux package; maybe a different alias name should be used)

# git
# `g` -> `git status`, `g foobar` -> `git foobar`
function g {
   if [[ $# > 0 ]]; then
     git $@
   else
     git status  || ls
   fi
}
# add `git` completion for `g`
complete -F _git g
alias ga='git add'
alias gc='git commit'
alias gs='git status || ls'
alias gd='git diff'
alias gds='git diff --staged'
alias gf='git fetch'
alias pull='git pull'
alias push='git push'
alias publish='git publish'
alias gitall='git add . && git commit . && git push'

# misc
alias tmux='TERM=xterm-256color tmux'
alias watch='\watch '   # allow alias expansion for watch argument
alias ta='tmux a'
alias v='/usr/bin/vim'
alias .='source'
alias reload-bashrc='source ~/.bashrc'
alias tf='tail -F'
sus(){ sort | uniq -c | sort $@; }
eval $(dircolors -b)   # highlight broken symlinks
stty -ixon   # disable flow control (to use ctrl+s in vim)
alias kill-zombies="ps ax -o state -o ppid | awk '$1==\"Z\"{print $2}' | xargs kill -9"
shrug(){ echo -n "¯\_(ツ)_/¯" | (xsel||pbcopy);echo "¯\_(ツ)_/¯ copied to your clipboard"; }
alias imgprint='convert label:@- $1'
x(){
  if [ -f "$1" ] ; then
    case "$1" in
      *.tar.bz2)   tar xvjf "$1"    ;;
      *.tar.gz)    tar xvzf "$1"    ;;
      *.bz2)       bunzip2 "$1"     ;;
      *.rar)       unrar x "$1"     ;;
      *.gz)        gunzip "$1"      ;;
      *.tar)       tar xvf "$1"     ;;
      *.tbz2)      tar xvjf "$1"    ;;
      *.tgz)       tar xvzf "$1"    ;;
      *.zip)       unzip "$1"       ;;
      *.Z)         uncompress "$1"  ;;
      *.7z)        7z x "$1"        ;;
      *)           echo "Unable to extract '$1'" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
alias weather='curl wttr.in'
alias repeat-last='cmd=$(fc -ln -1); while true; do $cmd; read; done'
alias repeat-last-auto='cmd=$(fc -ln -1); while true; do $cmd; sleep 1; done'
function box() {
  t="$1xxxx"
  c=${2:-#}
  echo ${t//?/$c}
  echo "$c $1 $c"
  echo ${t//?/$c}
}

# source other files
test -s $HOME/.bash-sourcer.sh && source $HOME/.bash-sourcer.sh

