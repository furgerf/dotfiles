# initial setup
set -g default-terminal screen-256color
set -g status-keys vi

# unbind unused keys (and indicate what the not-unbound keys do)
unbind-key C-b # default prefix
unbind-key \~ # show messages
unbind-key p # select the previous window
unbind-key C-o # rotate through panes
unbind-key C-z # suspend tmux
# unbind-key Space # select next layout
# unbind-key ! # break pane to new window
unbind-key $ # rename current session
unbind-key % # split window horizontally
unbind-key & # kill window
# unbind-key ' # prompt for window index to select
# unbind-key ( # switch to previous client (session)
# unbind-key ) # switch to next client (session)
# unbind-key , # rename the current window
unbind-key - # delete the latest paste buffer
# unbind-key . # move the current window
unbind-key 0 # select window 0
unbind-key 1 # select window 1
unbind-key 2 # select window 2
unbind-key 3 # select window 3
unbind-key 4 # select window 4
unbind-key 5 # select window 5
unbind-key 6 # select window 6
unbind-key 7 # select window 7
unbind-key 8 # select window 8
unbind-key 9 # select window 9
# TODO continue

# prefix
set-option -g prefix M-a
bind-key M-a send-prefix

# make windows and panes start with index 1
set -g base-index 1
setw -g pane-base-index 1

# config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# lengthen the amount of time status messages are displayed
set-option -g display-time 2000
set-option -g display-panes-time 3000

# automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set -g set-titles-string 'tmux@#h [#S]: #I (#W)'

# key bindings for copy-paste
setw -g mode-keys vi
set-option -g renumber-windows on
bind-key Enter copy-mode # enter copy mode
bind-key b list-buffers  # list paster buffers
bind-key p paste-buffer  # paste from the top pate buffer
bind-key P choose-buffer # choose which buffer to paste from
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi C-c send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "Copied to system clipboard"

# window activity monitor
#setw -g monitor-activity on
set -g visual-activity on

# set easier window split keys
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'

# create new windows with the same path as the current WD
bind-key c new-window -c "#{pane_current_path}"

# easier session handling
bind-key n command-prompt "new-session -t '%%'"
bind-key . command-prompt -I \#S "rename-session '%%'"

# use alt-hjkl keys without prefix key to switch panes
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D

# use prefix, hl to switch windows
bind-key h previous-window
bind-key l next-window

# use shift-arrows and alt-arrows to switch windows
bind-key -n S-Left  previous-window
bind-key -n S-Right next-window
bind-key -n M-Left  previous-window
bind-key -n M-Right next-window

# quick navigation to numbered window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t "{end}"

# support for (colored) undercurls https://evantravers.com/articles/2021/02/05/curly-underlines-in-kitty-tmux-neovim/
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# miscellaneous
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window
unbind-key S
bind-key S if-shell "tmux has-session -t main" \
  "display-message 'Session already loaded'" \
  "source-file ~/.tmux-session.conf" # load session
bind-key b break-pane -d # move current pane to new window
bind-key W setw synchronize-panes \; display-message "#{?pane_synchronized,Enabled,Disabled} pane synchronization"

# allow the keys to be used immediately after changing windows
set-option -g repeat-time 0

# No delay for escape key press
set -sg escape-time 0

# double press <prefix> to move to last window
bind-key M-a last-window

# mouse mode - tmux 2.1
set -g mouse on
# mose mode - tmux doesn't work on tmux 2.1
#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# maybe works on all?
#set -g mouse-utf8 off  # ARCH: Turned this off

# move pane with ctrl-alt-j/k
bind-key -n C-M-j swap-pane -D
bind-key -n C-M-k swap-pane -U
bind-key -n C-M-m swap-pane

set -g history-limit 10000

# enable focus-events to detect when pains gain/lose focus
set-option -g focus-events on
set-option -g copy-command xclip.exe

# tmux resurrect - NOTE: Switch to plugin manager if/when using more plugins in the future
run-shell ~/git/dotfiles/arch/tmux/plugins/tmux-resurrect/resurrect.tmux
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session' # restore vim sessions from Sessions.vim
set -g @resurrect-processes 'mongo "npm->npm start"'
#set -g @resurrect-save-bash-history 'on'

unbind-key /
bind-key / new-window -n "session-switcher" "tmux list-windows -a -F '#{session_name}:#{window_index} [#{window_name}]' | \
  grep -v '\\[session-switcher\\]' | fzf | cut -d'[' -f1 | xargs tmux switch-client -t"

# start "dev session" in current directory
bind-key Enter rename-window "#{b:pane_current_path}" \; \
  send-keys "[ -f venv/bin/activate ] && source venv/bin/activate; [ -f Session.vim ] && { nvim -S || true; } || nvim" \; \
  split-window -h -c "#{pane_current_path}" \; \
  send-keys "g sba" \; \
  split-window -v -c "#{pane_current_path}" \; \
  send-keys "gs" \; \
  select-pane -L
# start "AoC session"
bind-key A rename-window "AoC" \; \
  send-keys "cd ~/git/advent-of-code-2021/python && nvim -S" \; \
  split-window -h -c "~/git/advent-of-code-2021/python" \; \
  send-keys "make prepare-day DAY=" \; \
  split-window -v -c "~/git/advent-of-code-2021/python" \; \
  select-pane -U
# select sedimentum repo for new "dev session"
bind-key O new-window \; \
  send-keys \
  'REPO="$(find ~/git/sedimentum/ -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | sort | fzf)" && \
  cd "$HOME/git/sedimentum/$REPO" && \
  tmux rename-window "$REPO" && \
  tmux split-window -h && \
  tmux send-keys "g sba" && \
  tmux split-window -v && \
  tmux send-keys "gs" && \
  tmux select-pane -L && \
  [ -f venv/bin/activate ] && source venv/bin/activate; [ -f Session.vim ] && { nvim -S || true; } || nvim'

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
# # Note, bindings are repeatable (within the default 500ms time limit) so that
# # you don't have to keep entering the prefix. (Prefix-H-H-H resizes by 15)
bind-key -n S-Left resize-pane -L 2
bind-key -n S-Right resize-pane -R 2
bind-key -n S-Down resize-pane -D 1
bind-key -n S-Up resize-pane -U 1
bind-key -n C-Left resize-pane -L 10
bind-key -n C-Right resize-pane -R 10
bind-key -n C-Down resize-pane -D 5
bind-key -n C-Up resize-pane -U 5

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# tmux fingers
run-shell ~/git/dotfiles/arch/tmux/plugins/tmux-fingers/tmux-fingers.tmux
# don't use compact hints by default (illegible) - still can toggle them with <Space>
set -g @fingers-compact-hints 0

# theme
#set-window-option -g window-status-activity-attr none
TMUX_GREEN=colour142
TMUX_PURPLE=colour175
TMUX_BLUE=colour109
TMUX_AQUA=colour108
TMUX_RED=colour167
TMUX_YELLOW=colour214
TMUX_ORANGE=colour208
TMUX_BG0=colour233
TMUX_BG1=colour234
TMUX_BG2=colour235
TMUX_BG3=colour236
TMUX_BG4=colour237
TMUX_BG5=colour238
TMUX_FG1=colour246

# status bar (left/right)
set -g status-justify centre
set -g status-bg $TMUX_BG2
set -g status-fg $TMUX_RED # this shouldn't appear(?)
set -g status-interval 10
set -g status-left-length 70
set -g status-right-length 70
# set -g status-attr bold

STATUS_LEFT_1="#[bg=$TMUX_BG5,fg=$TMUX_PURPLE]  [#S]  "
STATUS_LEFT_2="#[bg=$TMUX_BG4,fg=$TMUX_BLUE]  #(whoami)@#H  "
STATUS_LEFT_3="#[bg=$TMUX_BG3,fg=$TMUX_AQUA]  #(uptime | tr -s ' ' | cut -d' ' -f 3- | rev | cut -d',' -f 5- | rev)  "
STATUS_LEFT_4="#[default,fg=$TMUX_RED]  #{?client_prefix,● ● ● ● ●,         }  "
set -g status-left $STATUS_LEFT_1$STATUS_LEFT_2$STATUS_LEFT_3$STATUS_LEFT_4
STATUS_RIGHT_1="#[bg=$TMUX_BG5,fg=$TMUX_PURPLE]  [#D]  "
STATUS_RIGHT_2="#[bg=$TMUX_BG4,fg=$TMUX_BLUE]  #(cut -d ' ' -f 1-3 /proc/loadavg)  "
STATUS_RIGHT_3="#[bg=$TMUX_BG3,fg=$TMUX_AQUA]  %b %d %Y %H:%M  "
STATUS_RIGHT_4="#[default,fg=$TMUX_RED]  #{?client_prefix,● ● ● ● ●,         }  "
set -g status-right $STATUS_RIGHT_4$STATUS_RIGHT_3$STATUS_RIGHT_2$STATUS_RIGHT_1

# windows bar (status bar middle)
set -g window-status-current-style bg=$TMUX_GREEN,fg=$TMUX_BG2
# set -g window-status-current-attr bold

set -g window-status-style bg=default,fg=$TMUX_FG1

set -g window-status-last-style bg=default,fg=$TMUX_GREEN

set -g window-status-separator '  '

# tmux messages/command prompt
set-option -g message-style bg=$TMUX_BG4,fg=$TMUX_YELLOW

# copy mode/session selection
set-window-option -g mode-style bg=$TMUX_ORANGE,fg=$TMUX_BG4

# pane separators
set-option -g pane-border-style fg=$TMUX_BG4,bg=$TMUX_BG1
set-option -g pane-active-border-style fg=$TMUX_GREEN,bg=$TMUX_BG0

# inactive panes
set-option -g window-style bg=$TMUX_BG1

# active pane
set-option -g window-active-style bg=$TMUX_BG0

