# initial setup
set -g default-terminal screen-256color
set -g status-keys vi

# prefix
unbind-key C-b
set-option -g prefix M-a
bind-key M-a send-prefix

# make windows and panes start with index 1
set -g base-index 1
setw -g pane-base-index 1

# create new windows with the same path as the current WD
bind c new-window -c "#{pane_current_path}"

# move current pane to new window
bind-key b break-pane -d

# config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# clear history
bind-key L clear-history \; display-message "history cleared"

# lengthen the amount of time status messages are displayed
set-option -g display-time 2000
set-option -g display-panes-time 3000

# automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# key bindings for copy-paste
setw -g mode-keys vi
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
set-option -g renumber-windows on

# window activity monitor
#setw -g monitor-activity on
set -g visual-activity on

# set easier window split keys
bind-key v split-window -h
bind-key s split-window -v

bind-key / choose-session

# use alt-hjkl keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# use prefix, hl to switch windows
bind-key h previous-window
bind-key l next-window

# use shift-arrows and alt-arrows to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind -n M-Left  previous-window
bind -n M-Right next-window

# quick navigation to numbered window
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# allow the keys to be used immediately after changing windows
set-option -g repeat-time 0

# No delay for escape key press
set -sg escape-time 0

# double press <prefix> to move to last window
bind-key M-a last-window

# mouse mode - tmux 2.1
set -g mouse on
# mose mode - tmux doesn't work on tmux 2.1
#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# maybe works on all?
#set -g mouse-utf8 off  # ARCH: Turned this off

bind M-r swap-pane -U

set -g history-limit 10000

# unbind unused keys
#unbind l

# theme
#set-window-option -g window-status-activity-attr none
set -g window-status-current-bg blue
set -g window-status-current-fg black
set -g window-status-current-attr bold
set-option -g pane-border-fg white
set-option -g pane-active-border-fg blue
set-option -g message-bg colour237
set-option -g message-fg colour231

# status bar
set -g status-justify centre
set -g status-bg black
set -g status-fg white
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=blue][#S] #(whoami)@#H'
set -g status-right '#[fg=blue]#(cut -d " " -f 1-3 /proc/loadavg)#[default]  #[fg=gray]%H:%M'

# tmux resurrect - NOTE: Switch to plugin manager if/when using more plugins in the future
run-shell ~/git/dotfiles/arch/tmux/plugins/tmux-resurrect/resurrect.tmux
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session' # restore vim sessions from Sessions.vim
set -g @resurrect-processes 'mongo "npm->npm start"'
#set -g @resurrect-save-bash-history 'on'

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
# # Note, bindings are repeatable (within the default 500ms time limit) so that
# # you don't have to keep entering the prefix. (Prefix-H-H-H resizes by 15)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
unbind -n C-Left
unbind -n C-Down
unbind -n C-Up
unbind -n C-Right
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

